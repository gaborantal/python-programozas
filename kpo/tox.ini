[tox]
envlist = py38,cover,flake8,pylint,bandit,linters
skipsdist = true

[testenv]
passenv = PYTHONPATH
;whitelist_externals = find
install_command = python -m pip install {opts} {packages}
deps = -r{toxinidir}/requirements.txt
commands =
;    find . -type f -name "*.py[c|o]" -delete
    pytest

[testenv:cover]
deps =
    {[testenv]deps}
    pytest-cov
whitelist_externals = coverage
skip_install = true
commands =
    pytest --cov kpo/
    coverage report --fail-under=60
    coverage html
    coverage erase

[testenv:flake8]
deps =
    -r{toxinidir}/requirements.txt
    flake8
    flake8-bugbear
    flake8-docstrings>=1.3.1
    flake8-typing-imports>=1.1
    pep8-naming
commands =
    flake8 kpo/ tests/ setup.py

[testenv:bandit]
deps =
    {[testenv:flake8]deps}
    bandit
commands =
    bandit -r kpo/

[testenv:pylint]
skip_install = true
deps =
    pyflakes
    pylint!=2.5.0
commands =
    pylint --rcfile=tox.ini kpo/

[MESSAGES CONTROL]
; C0111 Missing docstring
; I0011: Locally disabling %s
; I0012: Locally enabling %s
disable=I0011,I0012,C0111,W0142,C

[flake8]
ignore = D100,D101,D102,D103,D104,D107,E501
max-complexity = 10
skip_install = true

[testenv:linters]
skip_install = true
deps =
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:bandit]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:bandit]commands}


;[testenv:doc8]
;skip_install = true
;deps =
;    sphinx
;    doc8
;commands =
;    doc8 docs/source/

;[testenv:docs]
;changedir = doc/
;deps =
;    -r {toxinidir}/doc/requirements.txt
;commands =
;    sphinx-build -W -b html -d _build/doctrees . _build/html